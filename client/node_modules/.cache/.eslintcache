[{"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\index.js":"1","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\App.js":"2","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\reducers\\index.js":"3","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\styles.js":"4","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\actions\\posts.js":"5","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Posts.js":"6","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Form\\Form.js":"7","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\reducers\\posts.js":"8","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\styles.js":"9","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Form\\styles.js":"10","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Post\\Post.js":"11","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\api\\index.js":"12","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Post\\styles.js":"13"},{"size":481,"mtime":1632902777399,"results":"14","hashOfConfig":"15"},{"size":1481,"mtime":1632901195733,"results":"16","hashOfConfig":"15"},{"size":126,"mtime":1632901195748,"results":"17","hashOfConfig":"15"},{"size":369,"mtime":1632901195748,"results":"18","hashOfConfig":"15"},{"size":530,"mtime":1632901195733,"results":"19","hashOfConfig":"15"},{"size":760,"mtime":1632921247783,"results":"20","hashOfConfig":"15"},{"size":2391,"mtime":1632903416582,"results":"21","hashOfConfig":"15"},{"size":681,"mtime":1632901195748,"results":"22","hashOfConfig":"15"},{"size":278,"mtime":1632901195733,"results":"23","hashOfConfig":"15"},{"size":447,"mtime":1632901195733,"results":"24","hashOfConfig":"15"},{"size":1844,"mtime":1632921994742,"results":"25","hashOfConfig":"15"},{"size":417,"mtime":1632901195733,"results":"26","hashOfConfig":"15"},{"size":1013,"mtime":1632901195733,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1e46dk3",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\index.js",[],["59","60"],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\App.js",["61"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport { getPosts } from './actions/posts';\r\n\r\nimport agraw from './images/agraw.png';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n      }, [dispatch]);\r\n\r\n\r\n    return(\r\n        <Container maxidth=\"lg\">\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography className={classes.heading} variant =\"h2\" align=\"center\">Agraw</Typography>\r\n                <img className={classes.image} src={agraw} alt=\"agraw\" height=\"60\" width=\"40\"></img>\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n\r\n\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                        <Form />\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n\r\n\r\n        </Container>\r\n    );\r\n}  \r\n\r\n\r\nexport default App;","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\reducers\\index.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\styles.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\actions\\posts.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Form\\Form.js",["62","63","64"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\n\r\nconst Form = () =>{\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        dispatch(createPost(postData));\r\n        //clear();\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n        //setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n      };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n          <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\"> Quoi de neuf ?</Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })}/>\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n          </form>\r\n        </Paper>\r\n      );\r\n}\r\n\r\nexport default Form;\r\n","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\reducers\\posts.js",["65"],"\r\n// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ALL':\r\n        return action.payload;\r\n    case 'CREATE':\r\n        return [...posts, action.payload];\r\n      //  return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n  /*case CREATE:\r\n      return [...posts, action.payload];\r\n    case UPDATE:\r\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);   */\r\n    default:\r\n      return posts;\r\n  }\r\n};","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Post\\Post.js",["66"],"import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({post}) =>{\r\n    const classes = useStyles();\r\n\r\n    return(\r\n      \r\n      <Card className={classes.card}>\r\n        <CardMedia className={classes.media} image={post.selectedFile } title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.creator}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        <div className={classes.overlay2}>\r\n          <Button style={{ color: 'white' }} size=\"small\" onClick={() => {}}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{post.message}</Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button size=\"small\" color=\"primary\" onClick={() => {}}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\r\n          <Button size=\"small\" color=\"primary\" onClick={() => {}}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n        </CardActions>\r\n      </Card>   \r\n    );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\api\\index.js",[],"C:\\Users\\Yazid\\Desktop\\Projet FullStack\\client\\src\\components\\Posts\\Post\\styles.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"75","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"76","line":4,"column":23,"nodeType":"73","messageId":"74","endLine":4,"endColumn":34},{"ruleId":"71","severity":1,"message":"77","line":10,"column":22,"nodeType":"73","messageId":"74","endLine":10,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":20,"endColumn":3},{"ruleId":"71","severity":1,"message":"81","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":21},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'updatePost' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]